{"version":3,"file":"rebookmodal.min.js","sources":["../src/rebookmodal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/* eslint-disable no-console */\n\n/*\n * @package    local_musi\n * @author     Bernhard Fischer\n * @copyright  2022 Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Modal form to manually rebook users and gather data for payment tables.\n *\n * @module     local_musi/rebookmodal\n * @copyright  2023 Wunderbyte GmbH\n * @author     Bernhard Fischer\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\n\n/**\n * Modal to enter OrderID for manual rebookings.\n * @param {int} identifier\n * @param {int} userid\n * @param {int} usermodified\n */\nexport const init = (identifier, userid, usermodified) => {\n\n    console.log('rebookOrderidModal');\n\n    const modalForm = new ModalForm({\n\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_shopping_cart\\\\form\\\\modal_cashier_manual_rebook\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {\n            'identifier': identifier,\n            'userid': userid,\n            'usermodified': usermodified,\n        },\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('orderid_rebook_desc', 'local_shopping_cart')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        // returnFocus: button\n    });\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n        // eslint-disable-next-line no-console\n        console.log('rebookOrderidModal response: ', response);\n    });\n\n    // Show the form.\n    modalForm.show();\n};\n"],"names":["identifier","userid","usermodified","console","log","modalForm","ModalForm","formClass","args","modalConfig","title","addEventListener","events","FORM_SUBMITTED","e","response","detail","show"],"mappings":";;;;;;;;;;;;;;8JAyCoB,CAACA,WAAYC,OAAQC,gBAErCC,QAAQC,IAAI,4BAENC,UAAY,IAAIC,mBAAU,CAG5BC,UAAW,yDAEXC,KAAM,YACYR,kBACJC,oBACMC,cAGpBO,YAAa,CAACC,OAAO,mBAAU,sBAAuB,0BAM1DL,UAAUM,iBAAiBN,UAAUO,OAAOC,gBAAiBC,UACnDC,SAAWD,EAAEE,OAEnBb,QAAQC,IAAI,gCAAiCW,aAIjDV,UAAUY"}